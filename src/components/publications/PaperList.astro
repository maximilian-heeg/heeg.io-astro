---
export interface Props {
  paper: EntryObject[];
  year: number;
}

const { paper, year } = Astro.props;

let filtered = paper;
if (year) {
  filtered = paper.filter((item) => item.fields.date == year);
}
---

<astro-paper-list>
  <div class="twocol onscroll-fade-right">
    <a id="year"><h2>{year ? year : "All"}</h2></a>
    <div class="toggle-container">
      <input type="hidden" name="featured-only" value="false" />
      <label id="toggle-label-1"> Featured only</label>
      <button x-ref="toggle" class="inactive" type="button" role="switch">
        <span aria-hidden="true" class="inactive"></span>
      </button>
    </div>
  </div>

  <div class="responsive-twocol twocol-table onscroll-fade-in">
    {
      filtered.map((p) => (
        <div>
          <div
            class={`paper ${
              p.unknown_fields && p.unknown_fields.top[0].text == "yes"
                ? "featured"
                : "non-featured"
            }`}
          >
            <div class="title">
              <div class="star" />
              <h3>{p.fields.title[0].text}</h3>
            </div>
            <ul>
              {p.fields.author.map((a) => (
                <li before:siblings="content-dot">
                  {a.family[0].text.startsWith("Heeg") ? (
                    <strong>
                      {a.given[0].text} {a.family[0].text}
                    </strong>
                  ) : (
                    <span>
                      {a.given[0].text} {a.family[0].text}
                    </span>
                  )}
                </li>
              ))}
            </ul>
            <div class="details">
              <span class="font-normal">
                {p.fields.journaltitle[0].text}{" "}
                <span class="font-semibold">{p.fields.date}</span>
              </span>
              <a href={`https://doi.org/${p.fields.doi}`} target="_blank">
                <div class="link" />
                {p.fields.doi}
              </a>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</astro-paper-list>

<style>
  astro-paper-list {
    --at-apply: col-span-12 col-start-1 max-w-full px-3 mt-6 leading-7;
    --at-apply: "md:col-span-10 md:col-start-2";
    --at-apply: "lg:col-span-12 lg:col-start-1";
  }

  div.responsive-twocol {
    --at-apply: grid grid-cols-1;
    --at-apply: "lg:grid-cols-2";
  }

  div.twocol {
    --at-apply: flex flex-row justify-between;
  }

  div.twocol-table {
    --at-apply: box-border grid grod-cols-1 gap-px bg-gray-200 rounded-md border
      shadow-md p-0 overflow-hidden;
  }

  div.twocol-table > div {
    --at-apply: overflow-hidden;
  }

  div.twocol-table > div > div.paper {
    --at-apply: w-full h-full bg-gray-50 p-4 text-left box-border transition-all
      duration-300 relative;
    --at-apply: "hover:bg-gray-100 hover:scale-102";
  }

  .paper .title {
    --at-apply: grid grid-cols-[32px_1fr] gap-2 w-full;
  }

  .paper.featured .title .star {
    --at-apply: i-mdi-star my-auto w-8 h-8 text-yellow-400 transition-colors
      duration-300;
  }

  .paper.non-featured .title .star {
    display: none;
  }

  .paper.non-featured .title h3 {
    --at-apply: col-span-2;
  }

  .paper.featured:hover .title .star {
    --at-apply: text-yellow-500;
  }

  .paper.hide-non-featured {
    --at-apply: "hidden";
  }

  .paper.show-non-featured {
  }

  .paper .title h3 {
    margin: 0.5em 0;
    font-size: 1.125em;
    filter: none;
  }

  .paper .details {
    --at-apply: "grid grid-cols-1 gap-2 w-full md:grid-cols-2 mt-1em";
  }

  .paper .details .link {
    --at-apply: i-mdi-external-link inline-block align-middle w-4 h-4;
  }

  .paper .details a {
    --at-apply: italic font-light;
    --at-apply: "hover:text-heeg-active hover:underline";
  }

  .paper ul {
    --at-apply: p-0 list-none leading-snug font-light;
  }

  .paper ul li {
    --at-apply: inline;
  }

  div.toggle-container {
    --at-apply: mt-3em flex items-center justify-end cursor-pointer;
  }

  .toggle-container label {
    --at-apply: text-gray-900 font-medium cursor-pointer;
  }

  .toggle-container button {
    --at-apply: border-0 p-0 relative ml-4 inline-flex w-14 rounded-full py-1
      transition;
  }

  .toggle-container button.active {
    --at-apply: bg-slate-400;
  }

  .toggle-container button.inactive {
    --at-apply: bg-slate-300;
  }

  .toggle-container button span {
    --at-apply: bg-white h-6 w-6 rounded-full transition shadow-md;
  }

  .toggle-container button span.active {
    --at-apply: translate-x-7;
  }

  .toggle-container button span.inactive {
    --at-apply: translate-x-1;
  }
</style>

<script>
  class AstroPaperList extends HTMLElement {
    constructor() {
      super();

      const toggle = this.querySelector(".toggle-container");
      const input = this.querySelector(".toggle-container input");
      const button = this.querySelector(".toggle-container button")?.classList;
      const span = this.querySelector(".toggle-container span")?.classList;

      const nonFeatured = this.querySelectorAll(".non-featured");

      toggle?.addEventListener("click", function () {
        const toggleActive = input?.getAttribute("value");
        if (toggleActive === "false") {
          input?.setAttribute("value", "true");
          button?.add("active");
          button?.remove("inactive");
          span?.add("active");
          span?.remove("inactive");

          nonFeatured?.forEach((paper) => {
            paper.classList.add("hide-non-featured");
            paper.classList.remove("show-non-featured");
          });
        } else {
          input?.setAttribute("value", "false");
          button?.remove("active");
          button?.add("inactive");
          span?.remove("active");
          span?.add("inactive");

          nonFeatured?.forEach((paper) => {
            paper.classList.remove("hide-non-featured");
            paper.classList.add("show-non-featured");
          });
        }
      });
    }
  }

  customElements.define("astro-paper-list", AstroPaperList);
</script>
